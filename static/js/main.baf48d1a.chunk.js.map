{"version":3,"sources":["components/landing/backgroundImage.jpg","components/AppHeaderNavLink.tsx","containers/AppHeader.tsx","components/landing/LandingPage.tsx","containers/AppBody.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","AppHeaderNavLink","React","memo","_ref","label","createElement","className","AppHeader","links","map","link","route","key","LandingPage","src","backgroundImage","AppBody","headerProps","App","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wPCczBC,MAJ6BC,IAAMC,KAAKC,IAAA,IAACC,MAAEA,GAAOD,EAAA,OAC/DF,IAAAI,cAAA,QAAMC,UAAU,YAAYF,KCyBfG,MAtB6BN,IAAMC,KAChDC,IAAe,IAAdK,MAAEA,GAAOL,EACR,OACEF,IAAAI,cAAA,UAAQC,UAAU,cAChBL,IAAAI,cAAA,WAASC,UAAU,cAEnBL,IAAAI,cAAA,QAAMC,UAAU,eAChBL,IAAAI,cAAA,OAAKC,UAAU,cACVE,GACCA,EAAMC,IAAKC,GACTT,IAAAI,cAACL,EAAgB,CACfI,MAAOM,EAAKN,MACZO,MAAOD,EAAKC,MACZC,IAAKF,EAAKN,qCCdbS,MARf,WACE,OACEZ,IAAAI,cAAA,OAAKC,UAAU,oBACbL,IAAAI,cAAA,OAAKS,IAAKC,QCEDC,MANf,WACE,OACEf,IAAAI,cAACQ,EAAW,OCChB,MAAMI,EAA8B,CAClCT,MAAO,CACL,CACEJ,MAAO,iCACPO,MAAO,KAET,CACEP,MAAO,2BACPO,MAAO,OA0BEO,MArBf,WACE,OACEjB,IAAAI,cAAA,OAAKC,UAAU,OACbL,IAAAI,cAACE,EAAS,CACRC,MAAOS,EAAYT,QAErBP,IAAAI,cAACW,EAAO,QCZCG,MAZUC,IACnBA,GAAeA,aAAuBC,UACxCvB,EAAAwB,EAAA,GAAAC,KAAAzB,EAAA0B,KAAA,UAAqBD,KAAKpB,IAAiD,IAAhDsB,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAS1B,EACpEsB,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCHDU,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACHjC,IAAAI,cAACJ,IAAMkC,WAAU,KACflC,IAAAI,cAACa,EAAG,QAORC","file":"static/js/main.baf48d1a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backgroundImage.bc561989.jpg\";","import React from 'react';\n\n// import './AppHeaderNavLink.css';\n\n// define a Navigation Link type for our links\nexport type NavLink = {\n  label: string;\n  route: string;\n};\n\nconst AppHeaderNavLink: React.FC<NavLink> = React.memo(({ label }) => (\n  <span className=\"nav-link\">{label}</span>\n));\n\nexport default AppHeaderNavLink;\n","import React from 'react';\n\nimport './AppHeader.css'\nimport AppHeaderNavLink, {NavLink} from '../components/AppHeaderNavLink';\n\n// define our AppHeader properties that will be passed into the component\nexport type AppHeaderProps = {\n  links: NavLink[];\n};\n\n// create React Functional Component variable that will render our code for our header.\n// React.FC takes a type of the props that can be passed into the component\n// <h1>{title}</h1>\n// <small>{description}</small>\nconst AppHeader: React.FC<AppHeaderProps> = React.memo(\n  ({ links }) => {\n    return (\n      <header className=\"app-header\">\n        <section className=\"app-title\">\n        </section>\n        <span className=\"fill-space\" />\n        <div className=\"app-navbar\">\n            {links &&\n              links.map((link: NavLink) => (\n                <AppHeaderNavLink\n                  label={link.label}\n                  route={link.route}\n                  key={link.label}\n                />\n              ))}\n        </div>\n      </header>\n    );\n  }\n);\n\nexport default AppHeader;\n","import React from 'react';\n\nimport './LandingPage.css'\nimport backgroundImage from './backgroundImage.jpg'\n\nfunction LandingPage() {\n  return (\n    <div className=\"app-landing-page\">\n      <img src={backgroundImage} />\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from 'react';\n\nimport LandingPage from '../components/landing/LandingPage'\n\nfunction AppBody() {\n  return (\n    <LandingPage />\n  );\n}\n\nexport default AppBody;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport AppHeader, { AppHeaderProps } from './containers/AppHeader';\nimport AppBody from './containers/AppBody';\n\n// build an instance of our AppHeaderProps to pass to the AppHeader component\nconst headerProps: AppHeaderProps = {\n  links: [\n    {\n      label: '은송❤️잔',\n      route: '/',\n    },\n    {\n      label: '오시는길',\n      route: '/',\n    },\n  ],\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppHeader\n        links={headerProps.links}\n      />\n      <AppBody />\n    </div>\n  );\n}\n\n// const App: React.FC = () => (\n//   <div className=\"App\">\n//     <AppHeader\n//       title={headerProps.title}\n//       description={headerProps.description}\n//       links={headerProps.links}\n//     />\n//   </div>\n// );\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}